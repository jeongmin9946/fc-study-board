# ???? ?? ??? logBack?? springBoot ??? Debug ??? ???? ??
debug: false

# actuator? ??? endpoints ??? ??
management.endpoints.web.exposure.include: "*"

# ?? ??
logging:
  level:
    com.treename.board: debug
    # 2line debug? ??. request/response Log? Debug? ??
    org.springframework.web.servlet: debug
    # JPA ????? ??? ???? ?? ???? ?? (??? ?? ???)
    org.hibernate.type.descriptor.sql.BasicBinder: trace

# DB ??
spring:
  datasource:
    url: jdbc:mysql://localhost:3306/board
    username: TreeName
    password: treename!@
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    # TEST? ??? ??.
    defer-datasource-initialization: true
    # entity? ???? DDL Script ??.
    hibernate.ddl-auto: create
    # Log?? SQL ?? ??
    show-sql: true
    # JPA ???? ??? ???? ?? (JPA? ?????? Hibernate ??)
    properties:
      # ?? Log? ????? ??.
      hibernate.format_sql: true
      # ?? ??? ?? ???? ??? ??? ???? ??.
    hibernate.default_batch_fetch_size: 100
  # h2?? ???? web Console ??? ??
  h2.console.enabled: false
  # ???? ??? ?? ????
  sql.init.mode: always

# yaml ? 3?? ???? ??? ?? ?? ??.
---

# 테스트에서 적용하기 위한 별도의 DB Profile.
# 클래스에서 @ActiveProfiles("testdb") 와 같이 사용 가능
#spring:
#  config.activate.on-profile: testdb
#  datasource:
#    url: jdbc:h2:mem:board;mode=mysql
#    driverClassName: org.h2.Driver
#  sql.init.mode: always
#  # @AutoConfigureTestDatabase(replace = AutoConfigureTestDatabase.Replace.NONE)
#  # 위 어노테이션을 전역으로 설정하는 옵션.
#  test.database.replace: none